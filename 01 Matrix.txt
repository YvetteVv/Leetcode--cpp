class Solution {
public:
vector<pair<int,int> > dir = {{1,0},{-1,0},{0,1},{0,-1}};
vector<vector<int> > updateMatrix(vector<vector<int> >& matrix) {
    if(matrix.empty()) return matrix;
    int m = matrix.size();
    int n = matrix[0].size();
    vector<pair<int,int>> zeros;
    for(int i = 0; i < m; ++i){
        for(int j = 0; j < n; ++j){
            if(matrix[i][j] == 0){
                zeros.push_back({i,j});
            }else{
                matrix[i][j] = INT_MAX;
            }
        }
    }
    int pos = 0;
    while(pos < zeros.size()){
        auto xy = zeros[pos++];
        int i = xy.first, j = xy.second;
        for(auto d : dir){
            int ii = i + d.first, jj = j + d.second;
            if(ii < m && ii >= 0 && jj < n && jj >= 0){
                if(matrix[ii][jj] >= matrix[i][j] + 1){
                    matrix[ii][jj] = matrix[i][j] + 1;
                    zeros.push_back({ii,jj});
                }
            }
        }
    }
    return matrix;
}
};